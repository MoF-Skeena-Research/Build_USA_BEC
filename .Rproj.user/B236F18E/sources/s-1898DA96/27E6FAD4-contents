---
title: "BuildHex_for_USA_BGC"
author: "William H MacKenzie"
date: "26/10/2019"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library(dplyr)
library(rgdal)
library(sp)
library(raster)
library(rgeos)
library(maptools)
library(magrittr)
library(tibble)
library(tidyr)
library(sf)
library(tcltk)
library(foreach)
library(httr)
library(jsonlite)
library(randomForest)
library(data.table)
require(survey)
require(fasterize)
require(tibble)
require(maptools)
require(tictoc)
```

##Build fine scale hex raster grid and hex polygon for USA_BGC build

Function from http://strimas.com/spatial/hexagonal-grids/
Creates a hex grid. Use this function for USBGC map build
x= polygon, cell


````{r grid function}
source("_Function_make_HexGrid.R")

CRS.albers <- CRS ("+proj=aea +lat_1=50 +lat_2=58.5 +lat_0=45 +lon_0=-126 +x_0=1000000 +y_0=0 +datum=NAD83 +units=m +no_defs")
CRS.NAD83 <- CRS("+init=epsg:4269")

### Read in the combined state boundary files for WNA
USA <- readOGR(dsn = "./inputs/spatial_poly", layer = "USA_States")
USA <- spTransform(USA, CRS.albers)
USA_buff <- gBuffer(USA, byid=FALSE, width = .3) ##expand size of USA to capture boundaries

size <- 10000
USA_BGC_pts <- make_grid(USA_buff, cell_diameter = size, clip = FALSE)
#convert to SpatialPointsDataFrame and write shape file
  p <- data.frame (ID1 = 1 :length(USA_BGC_pts))
USA_BGC_pts2 <- SpatialPointsDataFrame(USA_BGC_pts, data = p)        

writeOGR (obj = USA_BGC_pts2, dsn = "./inputs/spatial_poly/USA_HexGrid_800m_new.shp", 
          layer = "GridPoints", driver = "ESRI Shapefile", overwrite_layer = TRUE)
#create CSV output for ClimateBC        
   p2 <- spTransform(USA_BGC_pts, CRS.NAD83) # to lat long in NAD83
  coords <- p2@coords
  coords <- as.data.frame(coords)
WNA_DEM <- raster("./inputs/DEM/WNA_DEM_clipped.tif")
projection(WNA_DEM) <- CRS.NAD83
    coords$elev <- raster::extract(WNA_DEM,p2)
  colnames(coords) <- c("longitude","latitude","elevation")
  coords <- as_tibble(rownames_to_column(coords, var = "ID1"))
  #overlay of points over administrative boundaries
  USA$State <- as.character (USA$State)
  
pnt_state <- over(USA_BGC_pts, USA[,"State"],  minDimension = 1, returnList = FALSE) 
  pnt_state <- as_tibble(rownames_to_column(pnt_state, var = "ID1"))
pts.info <- left_join(pnt_state, coords,  by = "ID1")
pts.info2 <- pts.info %>% dplyr::select(ID1, State, latitude, longitude, elevation) #order for ClimateWNA
write.csv (pts.info2,  "./inputs/grids/USA_800m_Grid_Climate_new.csv", row.names = FALSE)         

  
  USA_BGC_hex <- make_hex (USA_buff, cell_diameter = size, clip = FALSE)
#convert to SpatialPolygonsDataFrame
  o <- data.frame (ID1 = 1 :length(USA_BGC_hex))
        USA_BGC_hex2 <- SpatialPolygonsDataFrame(USA_BGC_hex, data = o)
    writeOGR (obj = USA_BGC_hex2, dsn = "./inputs/spatial_poly/USA_HexPoly_800m_new.shp", layer = "HexPolys", driver = "ESRI Shapefile", overwrite_layer = TRUE)


```
